// -*- C++ -*- generated by wxGlade 0.4.1 on Mon May 21 17:03:19 2007

#include "MyDayInfoDialog.h"
#include "wstockconfig.h"
#include "wx/filename.h"
#include "stocks.h"
#include <libxml/parser.h>
#include <libxml/tree.h>
#include <libxml/xpath.h>

MyDayInfoDialog::MyDayInfoDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: MyDayInfoDialog::MyDayInfoDialog
    window_1 = new MyDayInfoPlot(this, -1);
    static_line_5 = new wxStaticLine(this, -1);
    button_7 = new wxButton(this, wxID_OK, wxT(""));

    set_properties();
    do_layout();
    // end wxGlade
}


void MyDayInfoDialog::set_properties()
{
    // begin wxGlade: MyDayInfoDialog::set_properties
    SetTitle(_("MyDayInfo Dialog"));
    SetSize(wxSize(648, 471));
    button_7->SetDefault();
    // end wxGlade
}


void MyDayInfoDialog::do_layout()
{
    // begin wxGlade: MyDayInfoDialog::do_layout
    wxBoxSizer* sizer_14 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_15 = new wxBoxSizer(wxHORIZONTAL);
    sizer_14->Add(window_1, 1, wxEXPAND, 0);
    sizer_14->Add(static_line_5, 0, wxEXPAND, 0);
    sizer_15->Add(20, 20, 1, wxADJUST_MINSIZE, 0);
    sizer_15->Add(button_7, 0, wxALL|wxADJUST_MINSIZE, 5);
    sizer_14->Add(sizer_15, 0, wxEXPAND, 0);
    SetAutoLayout(true);
    SetSizer(sizer_14);
    Layout();
    // end wxGlade
}


MyDayInfoPlot::MyDayInfoPlot(wxWindow*parent, int id):wxScrolledWindow(parent, wxID_ANY, wxPoint(0,0),
                           wxSize(200,200),
                           wxSUNKEN_BORDER |
                           wxNO_FULL_REPAINT_ON_RESIZE |
                           wxVSCROLL | wxHSCROLL)
{
    SetBackgroundColour(wxColour(_T("WHITE")));
};

void MyDayInfoPlot::OnDraw(wxDC& dc)
{
    dc.SetFont(*wxSWISS_FONT);
	DrawPricePlot(dc);
}

#define TOTAY_DAYS_MYDAYINFO 15
typedef struct{
    double sz,sh,total,delta;
    bool Valid;
}TotalDayInfoStru;
void MyDayInfoPlot::DrawPricePlot(wxDC&dc){
    TotalDayInfoStru MyDays[TOTAY_DAYS_MYDAYINFO]={
        0
        };
    double MaxSz,MinSz,MaxSh,MinSh,MaxTotal,MinTotal,MaxDelta,MinDelta;
	MaxSz=MinSz=MaxSh=MinSh=MaxTotal=MinTotal=MaxDelta=MinDelta=0;

    wxString keyPath=WStockConfig::GetMyDayInfoPath();
    wxFileName keyf(keyPath);
    keyf.MakeAbsolute();
    xmlDocPtr doc=NULL;
    if (keyf.FileExists()){
        //Load Stocks Name From file
		doc = xmlParseFile((const char*)keyf.GetFullPath().mb_str());
    }

    //If Load Fail, Create the Xml Memory
    if (doc==NULL){
        dc.DrawText(_("No Info File Found!"),10,10);
        return;
    }

    for (xmlNodePtr node=doc->children->children;node;node=node->next){
            if (xmlStrcmp(node->name,(const xmlChar*)"DayInfo")==0){
				wxString Date(wxConvUTF8.cMB2WC(
					(char*)xmlGetProp(node, (const xmlChar*)"Date")),*wxConvCurrent);
				wxString Sz(wxConvUTF8.cMB2WC(
					(char*)xmlGetProp(node, (const xmlChar*)"ShenZhen")),*wxConvCurrent);
				wxString Sh(wxConvUTF8.cMB2WC(
					(char*)xmlGetProp(node, (const xmlChar*)"ShangHai")),*wxConvCurrent);
				wxString Total(wxConvUTF8.cMB2WC(
					(char*)xmlGetProp(node, (const xmlChar*)"Total")),*wxConvCurrent);
				wxString Delta(wxConvUTF8.cMB2WC(
					(char*)xmlGetProp(node, (const xmlChar*)"TodayEarning")),*wxConvCurrent);

                wxDateTime date;
                date.ParseDate(Date);
                int idx=(wxDateTime::Today()-date).GetDays();
                if  (idx<TOTAY_DAYS_MYDAYINFO){
                    Sz.ToDouble(&MyDays[idx].sz);
                    Sh.ToDouble(&MyDays[idx].sh);
                    Total.ToDouble(&MyDays[idx].total);
                    Delta.ToDouble(&MyDays[idx].delta);
					MyDays[idx].Valid = true;
                }
            }
    }

	int i;
	for (i=0;i<TOTAY_DAYS_MYDAYINFO;i++){
		if (MyDays[i].Valid){
			if (MyDays[i].sz>MaxSz) MaxSz = MyDays[i].sz;
			if (MyDays[i].sz<MinSz) MinSz = MyDays[i].sz;

			if (MyDays[i].sh>MaxSh) MaxSh = MyDays[i].sh;
			if (MyDays[i].sh<MinSh) MinSh = MyDays[i].sh;
			
			if (MyDays[i].total>MaxTotal) MaxTotal = MyDays[i].total;
			if (MyDays[i].total<MinTotal) MinTotal = MyDays[i].total;
			
			if (MyDays[i].delta>MaxDelta) MaxDelta = MyDays[i].delta;
			if (MyDays[i].delta<MinDelta) MinDelta = MyDays[i].delta;

		}
	}

	dc.SetPen(wxPen(*wxBLACK,3));
	int XStart=100,YStart=10,YFree=60;
	int TotalY=dc.GetSize().y-30-YFree;
	int XTotal = dc.GetSize().x-110;
	float TotalDelta=0;
	if (MinDelta<0)	TotalDelta = MaxTotal - MinDelta+YFree;
	else TotalDelta = MaxTotal+YFree;
	if (TotalDelta<0.0003) TotalDelta = 1;
	int ZeroY = (int)(double)(TotalY/TotalDelta * MaxTotal + YStart);
	dc.DrawLine(XStart,YStart,XStart,YStart + TotalY + YFree);
	dc.DrawLine(XStart-10,ZeroY,XStart+XTotal,ZeroY);

	for (i=0;i<TOTAY_DAYS_MYDAYINFO;i++){
		if (MyDays[i].Valid){
			int MyTotalY=(int)(double)(TotalY/TotalDelta * (MaxTotal -  MyDays[i].total) + YStart);
			int MyDeltaY=(int)(double)(TotalY/TotalDelta * (MaxTotal -  MyDays[i].delta) + YStart);
			dc.SetBrush(*wxBLACK_BRUSH);
			dc.DrawRectangle(XStart+(i+1)*(XTotal / (TOTAY_DAYS_MYDAYINFO + 1)) - 5,MyTotalY,10,ZeroY-MyTotalY);
			dc.SetBrush(*wxGREEN_BRUSH);
			dc.DrawRectangle(XStart+(i+1)*(XTotal / (TOTAY_DAYS_MYDAYINFO + 1)) - 5,MyDeltaY,10,ZeroY-MyDeltaY);
		}
	}

}
